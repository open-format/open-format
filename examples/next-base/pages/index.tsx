import {
  ConnectButton,
  useDeploy,
  useSaleData,
  useWallet
} from "@simpleweb/open-format-react";
import { ChangeEvent, FormEvent } from "react";
import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Logo from "../components/logo";
import styles from "../styles/Home.module.css";
import { useState } from "react";

const Home: NextPage = () => {
  const { isConnected } = useWallet();
  const [mintingPrice, setMintingPrice] = useState<number>(0.01);
  const [maxSupply, setMaxSupplySupply] = useState<number>(1);
  const [name, setName] = useState<string>("");
  const [symbol, setSymbol] = useState<string>("");

  const handleChangeSalePrice = (e: ChangeEvent<HTMLInputElement>) => {
    setMintingPrice(parseInt(e.currentTarget.value));
  };
  const handleChangeMaxSupply = (e: ChangeEvent<HTMLInputElement>) => {
    setMaxSupplySupply(parseInt(e.currentTarget.value));
  };
  const handleChangeName = (e: ChangeEvent<HTMLInputElement>) => {
    setName(e.currentTarget.value);
  };
  const handleChangeSymbol = (e: ChangeEvent<HTMLInputElement>) => {
    setSymbol(e.currentTarget.value);
  };

  const { deploy, data: contractData } = useDeploy();
  console.log({ ctxData: contractData?.contractAddress });

  const { data: saleData } = useSaleData({
    tokenId: "0x7c5d3ccd02df7b77ff36fb01e3f69f6f10cb9474"
  });

  console.log(saleData);

  const submit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    try {
      await deploy({
        maxSupply,
        mintingPrice,
        name,
        symbol,
        url: "ipfs://"
      });
    } catch (e) {
      console.log(e);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Open Format</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className={styles.header}>
        <h1>Open Format.</h1>
      </header>

      <main>
        <div className={styles.divider}></div>

        <div className={styles.main}>
          <div className={styles.connectedButtonContainer}>
            {!isConnected && <p>Click below to connect your wallet</p>}
            <div className={styles.connectedButton}>
              <ConnectButton className={styles.button} />
            </div>
            <div></div>
          </div>
          <h2 style={{ color: "#0070f3" }} className={styles.subtitle}>
            Build your own NFT ecosystem
          </h2>

          <h2>Links to the documentation</h2>
          <div className={styles.ctaContainer}>
            <a
              className={styles.link}
              href="https://github.com/simpleweb/open-format/tree/main/sdks/react"
              target="_blank"
              rel="noopener noreferrer"
            >
              <div className={styles.cta}>
                <h2 className={styles.subtitle}>SDK</h2>
              </div>
            </a>
            <a
              className={styles.link}
              href="https://openformat.simpleweb.co.uk/"
              target="_blank"
              rel="noopener noreferrer"
            >
              <div className={styles.cta}>
                <h2 className={styles.subtitle}>Open Format</h2>
              </div>
            </a>
          </div>

          <div className={styles.divider}></div>
        </div>
        {isConnected ? (
          <div>
            <div className={styles.formContainer}>
              <p className={styles.subtitle}>Deploy Your NFT here</p>
              <form onSubmit={e => submit(e)} className={styles.form}>
                <label className={styles.label} htmlFor="salePrice">
                  Name
                </label>
                <input
                  className={styles.input}
                  placeholder="Enter a name here"
                  type="text"
                  id="name"
                  name="name"
                  onChange={handleChangeName}
                  value={name}
                />

                <label className={styles.label} htmlFor="playerTwo">
                  Symbol
                </label>
                <input
                  className={styles.input}
                  placeholder="Blockchain ID"
                  type="text"
                  id="symbol"
                  name="symbol"
                  onChange={handleChangeSymbol}
                  value={symbol}
                />

                <label className={styles.label} htmlFor="salePrice">
                  Sale Price
                </label>
                <input
                  className={styles.input}
                  type="number"
                  id="salePrice"
                  name="salePrice"
                  onChange={handleChangeSalePrice}
                  value={mintingPrice}
                />

                <label className={styles.label} htmlFor="playerTwo">
                  Max Supply
                </label>
                <input
                  className={styles.input}
                  type="number"
                  id="maxSupply"
                  name="maxSupply"
                  onChange={handleChangeMaxSupply}
                  value={maxSupply}
                />
                <>
                  <button className={styles.buttonDeploy}>Deploy NFT</button>
                </>
              </form>
            </div>
            <div className={styles.divider}></div>
            <div>
              <p className={styles.subtitle}>View your releases</p>
            </div>
          </div>
        ) : (
          <div>
            <p>Some content here</p>
          </div>
        )}
      </main>
      <footer className={styles.footer}>
        <Link href={"https://simpleweb.co.uk"}>
          <a>
            <Logo />
          </a>
        </Link>
      </footer>
    </div>
  );
};

export default Home;
